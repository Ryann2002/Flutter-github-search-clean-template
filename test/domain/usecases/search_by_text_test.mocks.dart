// Mocks generated by Mockito 5.0.16 from annotations
// in flutter_git_search/test/domain/usecases/search_by_text_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:dartz/dartz.dart' as _i4;
import 'package:flutter_git_search/domain/entities/result_search.dart' as _i6;
import 'package:flutter_git_search/domain/errors/errors.dart' as _i5;
import 'package:flutter_git_search/domain/repository/search_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [ISearchRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockISearchRepository extends _i1.Mock implements _i2.ISearchRepository {
  MockISearchRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Either<_i5.FailureSearch, List<_i6.ResultSearch>>?> search(
          String? searchText) =>
      (super.noSuchMethod(Invocation.method(#search, [searchText]),
          returnValue: Future<
              _i4.Either<_i5.FailureSearch,
                  List<_i6.ResultSearch>>?>.value()) as _i3
          .Future<_i4.Either<_i5.FailureSearch, List<_i6.ResultSearch>>?>);
  @override
  String toString() => super.toString();
}
